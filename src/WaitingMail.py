# Generated by https://quicktype.io

import json

class WaitingMailElement:
    mail_recu: str
    date_récéption: str
    adresse_de_récéption: str
    mail_généré: str
    phase: str
    sujet_du_mail: str
    nombre_de_relance: str

    def __init__(self, mail_recu: str, date_récéption: str, adresse_de_récéption: str, mail_généré: str, phase: str, sujet_du_mail: str, nombre_de_relance: str) -> None:
        self.mail_recu = mail_recu
        self.date_récéption = date_récéption
        self.adresse_de_récéption = adresse_de_récéption
        self.mail_généré = mail_généré
        self.phase = phase
        self.sujet_du_mail = sujet_du_mail
        self.nombre_de_relance = nombre_de_relance

def loadJsonWaitingMail(json_file):
    with open(json_file, 'r') as file:
        data = json.load(file)

    elements = []
    for item in data:
        mail_recu = item["mail_recu"]
        date_récéption = item["date_récéption"]
        adresse_de_récéption = item["adresse_de_récéption"]
        mail_généré = item["mail_généré"]
        phase = item["phase"]
        sujet_du_mail = item["sujet_du_mail"]
        nombre_de_relance = item["nombre_de_relance"]

        waiting_mail_element = WaitingMailElement(mail_recu, date_récéption, adresse_de_récéption, mail_généré, phase, sujet_du_mail, nombre_de_relance)
        elements.append(waiting_mail_element)

    return elements

def updateJsonWaitingMail(elements, json_file):
    data = []
    for element in elements:
        data.append({
            "mail_recu": element.mail_recu,
            "date_récéption": element.date_récéption,
            "adresse_de_récéption": element.adresse_de_récéption,
            "mail_généré": element.mail_généré,
            "phase": element.phase,
            "sujet_du_mail": element.sujet_du_mail,
            "nombre_de_relance": element.nombre_de_relance
        })

    with open(json_file, 'w') as file:
        json.dump(data, file, indent=4)

    
def add_wainting_mail(objets_entreprise, contenu_mail_recu, sujet_mail_recu, adresse_mail_recu){
    
}

def mail_is_answer(objets_entreprise, adresse_mail_recu) -> bool:
    for entreprise in objets_entreprise:
        if adresse_mail_recu in entreprise.mail_de_contact:
            return (entreprise.nom, True)
    return False